datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  name      String       @db.VarChar(255)
  email     String       @unique
  password  String
  avatarUrl String?
  teams     Membership[]
}

model Team {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  name      String       @db.VarChar(255)
  slug      String       @unique
  members   Membership[]
  avatarUrl String?
  repos     Repo[]
}

enum MembershipRole {
  MEMBER
  OWNER
}

model Membership {
  teamId   Int
  userId   Int
  accepted Boolean        @default(false)
  role     MembershipRole
  team     Team           @relation(fields: [teamId], references: [id])
  user     User           @relation(fields: [userId], references: [id])

  @@id([userId, teamId])
}

model Repo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  slug      String   @unique
  owner     Team     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  dbUrl     String
}
